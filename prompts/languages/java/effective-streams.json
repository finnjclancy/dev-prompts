{
  "title": "java: effective streams",
  "description": "refactor loops to idiomatic streams with clear collectors.",
  "language": "java",
  "tech": "java-streams",
  "category": "languages",
  "subcategory": "java",
  "tags": ["java", "streams", "refactor"],
  "inputs": [
    { "name": "code_selection", "type": "code", "required": true }
  ],
  "context": "prefer readable pipelines; avoid side effects inside streams.",
  "instructions": "1) identify transformation and collection patterns. 2) refactor to streams with proper collectors. 3) add tests to ensure equivalence. return code only.",
  "model_tips": "avoid parallel streams unless measured.",
  "risks": "hidden performance hits; readability issues.",
  "references": [],
  "output_format": { "type": "code" }
}

